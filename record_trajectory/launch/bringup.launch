<launch>
  <arg name="path" default=""/>
  <arg name="filename" default="recording.json"/>

  <include file="$(find recordit)/launch/record.launch">
    <arg name="manual" value="true" />
    <arg name="path" value="$(arg path)/$(arg filename)"/>
   </include>

  <arg name="limited" default="true"/>
  <!-- Load the URDF -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find record_trajectory)/urdf/robot.xacro'" />

  <!-- Load the SRDF and other .yaml configuration files on the param server -->
  <include file="$(find ur5_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="/use_gui" value="false"/>
    <rosparam param="/source_list">[/move_group/fake_controller_joint_states]</rosparam>
  </node>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" />

  <!-- Run the main MoveIt executable without trajectory execution (we do not have controllers configured by default) -->
  <include file="$(find ur5_moveit_config)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
  </include>

  <!-- Run Rviz and load the default config to see the state of the move_group node -->
  <node name="rviz" pkg="rviz" type="rviz" respawn="false"
        args="-d $(find record_trajectory)/launch/config.rviz"/>

</launch>
